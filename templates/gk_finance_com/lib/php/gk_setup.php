<?php/* --------------------------------------------------------------  # Finance.com - September 2009 (for Joomla 1.5)  # Copyright (C) 2007-2009 Gavick.com. All Rights Reserved.  # License: Copyrighted Commercial Software  # Website: http://www.gavick.com  # Support: support@gavick.com  --------------------------------------------------------------- */// no direct accessdefined('_JEXEC') or die('Restricted access');// Adding MooTools 1.11 to templateJHtml::_('behavior.framework');/* --------------------------------------------------------------  #  # Generating basic template variables  #  -------------------------------------------------------------- */// setting variable for template base url$template_baseurl = $this->baseurl . '/templates/' . $this->template;// getting information about basic template color$template_color = $this->params->get("template_color", 1);// getting information about login button$login_button = ($this->params->get("login_button", 1) == 1) ? true : false;// getting information about tools button$tools = ($this->params->get("tools", 1) == 1) ? true : false;// getting tools parametes$colorpicker1 = ($this->params->get("colorpicker1", 1) == 1) ? true : false;$colorpicker1_text = ($this->params->get("colorpicker1_text", "Color 1"));$colorpicker2 = ($this->params->get("colorpicker2", 1) == 1) ? true : false;$colorpicker2_text = ($this->params->get("colorpicker2_text", "Color 2"));$colorpicker3 = ($this->params->get("colorpicker3", 1) == 1) ? true : false;$colorpicker3_text = ($this->params->get("colorpicker3_text", "Color 3"));$colorpicker4 = ($this->params->get("colorpicker4", 1) == 1) ? true : false;$colorpicker4_text = ($this->params->get("colorpicker4_text", "Color 4"));$colorpicker5 = ($this->params->get("colorpicker5", 1) == 1) ? true : false;$colorpicker5_text = ($this->params->get("colorpicker5_text", "Color 5"));$colorpicker6 = ($this->params->get("colorpicker6", 1) == 1) ? true : false;$colorpicker6_text = ($this->params->get("colorpicker6_text", "Color 6"));$colorpicker7 = ($this->params->get("colorpicker7", 1) == 1) ? true : false;$colorpicker7_text = ($this->params->get("colorpicker7_text", "Color 7"));$colorpicker8 = ($this->params->get("colorpicker8", 1) == 1) ? true : false;$colorpicker8_text = ($this->params->get("colorpicker8_text", "Color 8"));$colorpicker9 = ($this->params->get("colorpicker9", 1) == 1) ? true : false;$colorpicker9_text = ($this->params->get("colorpicker9_text", "Color 9"));$colorpicker10 = ($this->params->get("colorpicker10", 1) == 1) ? true : false;$colorpicker10_text = ($this->params->get("colorpicker10_text", "Color 10"));$colorpicker11 = ($this->params->get("colorpicker11", 1) == 1) ? true : false;$colorpicker11_text = ($this->params->get("colorpicker11_text", "Color 11"));$colorpicker12 = ($this->params->get("colorpicker12", 1) == 1) ? true : false;$colorpicker12_text = ($this->params->get("colorpicker12_text", "Color 12"));$colorpicker13 = ($this->params->get("colorpicker13", 1) == 1) ? true : false;$colorpicker13_text = ($this->params->get("colorpicker13_text", "Logo,login,register"));$predefined_styles = ($this->params->get("predefined_styles", "Blue theme:#001122,#013971,#014b94,#ff7800,#99bde2,#f5fafe,#fff7ef,#efeeee,#ffffff,#333333,#013971,#014b94,#ffffff;"));// getting styles array$styles_names = array();$styles_colors = array();// exploding styles$styles = preg_replace("/\n$/", '', $predefined_styles);$exploded_styles = explode(';', $styles);// parsing	for ($i = 0; $i < count($exploded_styles); $i++) {    $temp_array = explode(":", $exploded_styles[$i]);    $styles_names[$i] = $temp_array[0];    if (isset($temp_array[1])) {        $styles_colors[$i] = explode(",", $temp_array[1]);    }}// getting information about stylearea$stylearea = ($this->params->get("stylearea", 1) == 1) ? true : false;// getting information about register button$register_button = ($this->params->get("register_button", 1) == 1) ? true : false;// getting information about logo$logo_as_image = ($this->params->get("logo_as_image", 1) == 1) ? true : false;$logo_text = $this->params->get("logo_text", "Finance<span class='col'>.</span>com");// getting footer content$footer_content = $this->params->get("footer_content", "Template Design &copy; <a href=\"http://www.gavick.com\" target=\"_blank\">GavickPro</a>.  All rights reserved.");// getting menu$app2 = JFactory::getApplication();$menu = $app2->getMenu();// getting information about menu type$menu_type = $this->params->get("menutype", "standard");// getting information about frontpage$frontpage_i = ($this->params->get("frontpage", 1) == 1) ? false : ($menu->getActive() == $menu->getDefault());// getting column position$column_position = $this->params->get("column_position", "right");// creating JURI instance	$url = clone(JURI::getInstance());// getting User object and user ID $user = JFactory::getUser();// getting User ID$userID = $user->get('id');// getting date params$_date = $this->params->get("date", 1);$date_format = $this->params->get("date_format", 'M j');// getting RSS icon params$rss_icon = $this->params->get("rss_icon", 1);$rss_link = $this->params->get("rss_link", '#');$rss_text = $this->params->get("rss_text", '#');/* --------------------------------------------------------------  #  # Calculating dimensions  #  -------------------------------------------------------------- */$column_width = $this->params->get("column_width", 320);$inset_width = $this->params->get("inset_width", 180);$mainbody_width = 978;$column_margin = 8;$inset_margin = 40;$content_width = 0;if ($this->countModules('column')) {    $mainbody_width = $mainbody_width - 2 - $column_margin - $column_width;}$content_width = $mainbody_width;if ($this->countModules('inset')) {    $content_width = $content_width - 24 - $inset_margin - $inset_width;} else {    $content_width = $content_width - 24;}/* --------------------------------------------------------------  #  # Generating user positions classes  #  -------------------------------------------------------------- */// empty variables for classes$advert_position = 'null';$user_position_1 = 'null';$user_position_2 = 'null';$user_position_3 = 'null';/**  $user_position_1 * */// 33%if ($this->countModules('user1 and user2 and user3')) {    $user_position_1 = 'us_width-33 us_width';} else if ($this->countModules('user1 and user2') || $this->countModules('user1 and user3') || $this->countModules('user2 and user3')) {    $user_position_1 = 'us_width-50 us_width';} else {    $user_position_1 = 'us_width-100';}/**  $user_position_2 * */// 33%if ($this->countModules('user4 and user5 and user6')) {    $user_position_2 = 'us_width-33 us_width';} else if ($this->countModules('user4 and user5') || $this->countModules('user4 and user6') || $this->countModules('user5 and user6')) {    $user_position_2 = 'us_width-50 us_width';} else {    $user_position_2 = 'us_width-100';}/**  $user_position_3 * */$sum_modules = 0;if ($this->countModules('user7') > 0)    $sum_modules += 1;if ($this->countModules('user8') > 0)    $sum_modules += 1;if ($this->countModules('user9') > 0)    $sum_modules += 1;if ($this->countModules('user10') > 0)    $sum_modules += 1;if ($this->countModules('user11') > 0)    $sum_modules += 1;if ($sum_modules == 5) { // 20%    $user_position_3 = 'us_width-20 us_width';} else if ($sum_modules == 4) { // 25%    $user_position_3 = 'us_width-25 us_width';} else if ($sum_modules == 3) { // 33%    $user_position_3 = 'us_width-33 us_width';} else if ($sum_modules == 2) { // 50%    $user_position_3 = 'us_width-50 us_width';} else { // 100%    $user_position_3 = 'us_width-100';}?>